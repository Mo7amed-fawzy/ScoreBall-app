import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: HomepageScreen(title: 'Shared Preferences'),
    );
  }
}

class HomepageScreen extends StatefulWidget {
  const HomepageScreen({super.key, required this.title});
  final String title;

  @override
  State<HomepageScreen> createState() => _HomepageScreenState();
}

class _HomepageScreenState extends State<HomepageScreen> {
  int _counter = 0;

  // حالة التبديل بين مواضع الأزرار
  int _fabOrder = 0;

  // دالة لتبديل مواقع الأزرار
  void _changeFabOrder() {
    setState(() {
      _fabOrder = (_fabOrder + 1) % 3; // للتبديل بين الحالات الثلاثة
    });
  }

  @override
  void initState() {
    SharedPreferences.getInstance().then(
      (sp) {
        setState(
          () {
            _counter = sp.getInt('counter') ?? 0;
          },
        );
      },
    );
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
        actions: [
          IconButton(
            icon: const Icon(Icons.import_contacts),
            onPressed: _changeFabOrder, // تغيير ترتيب الأزرار عند الضغط
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
          ],
        ),
      ),

      // عرض الأزرار بتبديل مواقعهم بناءً على حالة _fabOrder
      floatingActionButton: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: _getFabOrder(), // استدعاء دالة لترتيب الأزرار
      ),
    );
  }

  // دالة لتبديل ترتيب الأزرار
  List<Widget> _getFabOrder() {
    switch (_fabOrder) {
      case 1:
        return [
          _resetButton(),
          _decrementButton(),
          _incrementButton(),
        ];
      case 2:
        return [
          _incrementButton(),
          _resetButton(),
          _decrementButton(),
        ];
      default:
        return [
          _decrementButton(),
          _incrementButton(),
          _resetButton(),
        ];
    }
  }

  // دوال إنشاء الأزرار
  Widget _incrementButton() {
    return FloatingActionButton(
      onPressed: () {
        SharedPreferences.getInstance().then((sp) {
          sp.setInt('counter', _counter + 1);
        });
        setState(() {
          _counter++;
        });
      },
      tooltip: 'Increment',
      child: const Icon(Icons.add),
    );
  }

  Widget _decrementButton() {
    return FloatingActionButton(
      onPressed: () {
        SharedPreferences.getInstance().then((sp) {
          sp.setInt('counter', _counter - 1);
        });
        setState(() {
          _counter--;
        });
      },
      tooltip: 'Decrement',
      backgroundColor: Colors.blue,
      child: const Icon(Icons.remove),
    );
  }

  Widget _resetButton() {
    return FloatingActionButton(
      onPressed: () {
        SharedPreferences.getInstance().then((sp) {
          sp.setInt('counter', 0);
        });
        setState(() {
          _counter = 0;
        });
      },
      tooltip: 'Reset',
      backgroundColor: Colors.red,
      child: const Icon(Icons.refresh),
    );
  }
}
